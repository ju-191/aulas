#Escreva um algoritmo que leia tr√™s n√∫meros inteiros e posiAvos (a, b, c por exemplo) e calcule a seguinte express√£o:
# ùëüùëíùë†ùë¢ùëôùë°ùëéùëëùëú = (ùëé + ùëè)/ùëê
# Na sequ√™ncia imprima a vari√°vel resultado.

a = int(input('a: '))
b = int(input('b: '))
c = int(input('c: '))
resultado = (a+b)/c
print(f'Resultado = {resultado}')

#Escreva um algoritmo que solicite ao usu√°rio a digita√ß√£o de um n√∫mero inteiro.
#Na sequ√™ncia, o algoritmo deve verificar se o n√∫mero √© maior do que 50 e exibir a mensagem:
# ‚ÄúN√∫mero maior do que 50‚Äù, caso contr√°rio, exibir a mensagem: ‚ÄúN√∫mero menor do que 50‚Äù.

n = int(input('Digite um n√∫mero inteiro: '))
if (n > 50):
  print('N√∫mero maior que 50.')
else:
  print ('N√∫mero menor que 50')

# UAlizando uma estrutura de repeA√ß√£o (FOR), escreva um algoritmo que solicite ao usu√°rio as 4 notas obAdas por um aluno 4
# e na sequ√™ncia, uAlizando o comando print(), imprima as quatro notas digitadas.

notas = []
for i in range (4):
  n = float(input(f'Nota {i+1}: '))
  notas.append(n)

print(f'As notas do aluno foram {notas}')

# Escreva um algoritmo que leia uma senha de 8 caracteres e verifique se essa senha digitada est√° correta.
# A senha original que ser√° uAlizada como base de compara√ß√£o deve ser inseridano in√≠cio do c√≥digo,
# para que na sequ√™ncia seja poss√≠vel comparar com a senha que o usu√°rio digitou.

senha = 'A234567F'
s = 0
while s != senha:
  s = input('Senha: ')
print('Senha correta!')

#Construir um programa que faz leitura de N n√∫meros inteiros, onde N tamb√©m deve ser lido,
#e imprime apenas o Maior entre eles.

n = int(input('N = '))
lista = []
for i in range (n):
  lista.append(int(input(f'N√∫mero {i+1}: ')))

print(f'O maior n√∫mero √© {max(lista)}.')

# Escreva um algoritmo que calcule o montante (capital + juros) de um capital aplicado a juros simples.
# O algoritmo deve solicitar ao usu√°rio o capital inicial, a taxa de juros ao m√™s e o tempo em meses.
#A f√≥rmula a ser uAlizada √©: ùêΩ = ùê∂. ùëñ. ùë°

C = float(input('Qual √© o capital inicial? '))
i = float(input('Qual √© a taxa de juros (%) ao m√™s? '))
t = float(input('Qual √© o tempo (em meses)? '))

print(f'O montante ser√° de {(C + (C*(i/100)*t))}')

# Imagine a seguinte fun√ß√£o matem√°Aca: ùë¶ = 4ùë• + 3.
# Escreva um algoritmo que solicite ao usu√°rio o valor de x e na sequ√™ncia calcule o valor de y e imprima na tela o resultado.

x = float(input('X = '))

print(f'4x + 3 = {4*x +3}')

# Seja a lista a seguir: valores = [4, 3, 12, 25, 1, 9, 8, 11, 7, 14, 55, 0], implemente um algoritmo que defina essa lista e na sequ√™ncia,
# por meio de um la√ßo de repeA√ß√£o (FOR) verifique quais #valores s√£o maiores do que 10. Os elementos maiores do que 10 devem ser impressos na tela (print).

lista = [4, 3, 12, 25, 1, 9, 8, 11, 7, 14, 55, 0]
for n in lista:
  if n > 10:
    print(n)

# A m√©dia para aprova√ß√£o em uma determinada escola √© 7.
# O Aluno que fica com nota abaixo de 7, mas maior ou igual a 5 est√° automaAcamente em um regime de recupera√ß√£o no qual far√° aAvidades
# e aulas extras para realizar uma nova prova e tentar melhorar sua nota final.
# Alunos com m√©dia abaixo de 5 est√£o automaAcamente reprovados.
# Construa um algoritmo que possa validar a situa√ß√£o descrita acima por meio da nota inserida pelo usu√°rio.
# O usu√°rio deve ser informado a respeito da situa√ß√£o do aluno (aprovado, recupera√ß√£o, reprovado) por meio de prints na tela.

nota = float(input('Nota: '))
if nota < 5:
  print('Reprovado.')
elif nota < 7:
  print('Recupera√ß√£o.')
else:
  print('Aprovado!')

# Implemente um algoritmo que fa√ßa a convers√£o de metros para cenhmetros.

m = float(input('Quantos metros? '))
print(f'{m} metros = {m * 100} cent√≠metros')
